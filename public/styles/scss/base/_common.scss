@use '../helpers' as *;

* {
  font-family: $en-font, $kr-font, -apple-system, BlinkMacSystemFont, system-ui, Roboto, "Helvetica Neue", "Segoe UI", "Apple SD Gothic Neo", "Noto Sans KR", "Malgun Gothic", "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", sans-serif;
}

html {
  font-size: 62.5%;
   
  @include desktop {
    font-size: 55%;
  }
}

body {
  font-size: rem(16);
  color: $black-main;

  @include tablet {
    font-size: rem(14);
  }
}

::selection {
  background-color: $red-main;
  color: $white-main;
  transition: 0.1s ease;
}

*::-webkit-scrollbar {
  @include size(4px);

  &-thumb {
    @include size(4px, 30%);
    @include radius(10px);

    // background: #f4f4f4 !important;
    background: rgb($black-sub01, 0.2);
    border: 4px solid #ccc;
    
    &:hover {
      background: #f4f4f4 !important;
    }
  }

  &-track {
    background: rgb($black-sub01, 0);
  }
}

body {
  * {
    cursor: none;
  }

  @media (pointer:coarse) {
    /* custom css for "touch targets" */
    .custom-cursor {
      display: none;
    }
    
    * {
      cursor: auto;
    }
  }
}

// skip navigation
#skipNav {
  position: absolute;
  width: 100%;

  button {
    @include flex-layout($justify: center);
    @include size(100%, 50px);
    
    position: absolute;
    top: 0;
    background: transparent;
    color: $black-sub01;
    transform: translateY(-100%);

    &:focus,
    &:active {
      transform: translateY(0);
    }
  }
}


// common layout
#wrap {
  min-height: vh(100);

  @include tablet {
    @include scroll-remove;
  }
}

.blind {
  @include blind;
}


// button
.btn {
  @include inline-block;

  border-width: 1px;
  border-style: solid;
  font-weight: $font-medium;

  &-ico {
    @include inline-block;

    border-color: transparent;
  }

  &-round {
    @include radius(30px);
  }

  &-black {
    border-color: $black-main;
    color: $black-main;
  }
}


// vue transition ani.
.routing-fade {
  // 진입(enter)
  &-enter-active {
    transition: opacity 1s ease-in-out;
  }
  
  // 퇴장(leave)
  &-leave-active {
    transition: opacity 2s ease-in-out;
  }
  
  // appear(enter)
  &-appear-active {
    transition: opacity 1s ease-in-out;
  }
  
  // 초기 상태, 최종 상태
  &-enter,
  &-leave-to,
  &-appear {
    opacity: 0;
  }
}






// .routing-fade {
//   &-enter-active,
//   &-appear-active {
//     transition: opacity 0.5s ease-in-out;
//   }
  
//   &-enter,
//   &-leave-to,
//   &-appear {
//     opacity: 0;
//   }
// }